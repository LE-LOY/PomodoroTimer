//@author leloy

package GUI;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

public class Pomodoro extends javax.swing.JFrame {
    static Pomodoro pomodoro = new Pomodoro();
    
    int pomCurrent = 0;
    int spanCurrent = 0;
    boolean breaktime = false;
    
    Timer ticker;
    
    
    public Pomodoro() {
        initComponents();
        Settings.init();
        TaskManager.loadTasks();
        
        updateTimer();
        firstTask();
        
        this.getContentPane().setBackground(new Color(51, 51, 55) );
        
        ticker = new Timer(10, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                //Thread this later:
                tick();
            }
        });
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_startpause = new javax.swing.JButton();
        btn_done = new javax.swing.JButton();
        btn_skip = new javax.swing.JButton();
        btn_todo = new javax.swing.JButton();
        btn_utilities = new javax.swing.JButton();
        pnl_hours = new javax.swing.JPanel();
        btn_hrs_add = new javax.swing.JButton();
        sep_hrs1 = new javax.swing.JSeparator();
        lbl_hrs = new javax.swing.JLabel();
        sep_hrs2 = new javax.swing.JSeparator();
        btn_hrs_sub = new javax.swing.JButton();
        pnl_minutes = new javax.swing.JPanel();
        btn_min_add = new javax.swing.JButton();
        sep_min1 = new javax.swing.JSeparator();
        lbl_min = new javax.swing.JLabel();
        sep_min2 = new javax.swing.JSeparator();
        btn_min_sub = new javax.swing.JButton();
        pnl_seconds = new javax.swing.JPanel();
        btn_sec_add = new javax.swing.JButton();
        sep_sec1 = new javax.swing.JSeparator();
        lbl_sec = new javax.swing.JLabel();
        sep_sec2 = new javax.swing.JSeparator();
        btn_sec_sub = new javax.swing.JButton();
        lbl_active = new javax.swing.JLabel();
        lbl_task = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(300, 550));

        btn_startpause.setBackground(new java.awt.Color(51, 51, 51));
        btn_startpause.setForeground(new java.awt.Color(153, 255, 255));
        btn_startpause.setText("Start");
        btn_startpause.setName("btn_startpause"); // NOI18N
        btn_startpause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startpause_onCLick(evt);
            }
        });

        btn_done.setBackground(new java.awt.Color(51, 51, 51));
        btn_done.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_done.setForeground(new java.awt.Color(255, 255, 255));
        btn_done.setText("Done");
        btn_done.setName("btn_done"); // NOI18N
        btn_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_done_onClick(evt);
            }
        });

        btn_skip.setBackground(new java.awt.Color(51, 51, 51));
        btn_skip.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_skip.setForeground(new java.awt.Color(255, 255, 255));
        btn_skip.setText("Skip");
        btn_skip.setName("btn_skip"); // NOI18N
        btn_skip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_skip_onClick(evt);
            }
        });

        btn_todo.setBackground(new java.awt.Color(51, 51, 51));
        btn_todo.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_todo.setForeground(new java.awt.Color(255, 255, 255));
        btn_todo.setText("To-do");
        btn_todo.setName("btn_todo"); // NOI18N
        btn_todo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_todo_onClick(evt);
            }
        });

        btn_utilities.setBackground(new java.awt.Color(51, 51, 51));
        btn_utilities.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        btn_utilities.setForeground(new java.awt.Color(255, 255, 255));
        btn_utilities.setText("Utilities");
        btn_utilities.setName("btn_utilities"); // NOI18N
        btn_utilities.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_utilities_onClick(evt);
            }
        });

        pnl_hours.setBackground(new java.awt.Color(51, 51, 55));
        pnl_hours.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnl_hours.setName("pnl_hours"); // NOI18N

        btn_hrs_add.setBackground(new java.awt.Color(51, 51, 51));
        btn_hrs_add.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_hrs_add.setForeground(new java.awt.Color(204, 204, 204));
        btn_hrs_add.setText(" + ");
        btn_hrs_add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_hrs_add.setContentAreaFilled(false);
        btn_hrs_add.setName("btn_hrs_add"); // NOI18N
        btn_hrs_add.setOpaque(true);
        btn_hrs_add.setPreferredSize(new java.awt.Dimension(80, 20));
        btn_hrs_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hrs_add_onClick(evt);
            }
        });

        sep_hrs1.setBackground(new java.awt.Color(102, 102, 102));
        sep_hrs1.setForeground(new java.awt.Color(51, 51, 51));
        sep_hrs1.setName("sep_hrs1"); // NOI18N

        lbl_hrs.setFont(new java.awt.Font("Arimo", 0, 64)); // NOI18N
        lbl_hrs.setForeground(new java.awt.Color(255, 255, 255));
        lbl_hrs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_hrs.setText("09");
        lbl_hrs.setName("lbl_hrs"); // NOI18N

        sep_hrs2.setBackground(new java.awt.Color(102, 102, 102));
        sep_hrs2.setForeground(new java.awt.Color(51, 51, 51));
        sep_hrs2.setName("sep_hrs2"); // NOI18N

        btn_hrs_sub.setBackground(new java.awt.Color(51, 51, 51));
        btn_hrs_sub.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_hrs_sub.setForeground(new java.awt.Color(204, 204, 204));
        btn_hrs_sub.setText(" - ");
        btn_hrs_sub.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_hrs_sub.setContentAreaFilled(false);
        btn_hrs_sub.setName("btn_hrs_sub"); // NOI18N
        btn_hrs_sub.setOpaque(true);
        btn_hrs_sub.setPreferredSize(new java.awt.Dimension(80, 20));
        btn_hrs_sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hrs_sub_onClick(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnl_hoursLayout = new org.jdesktop.layout.GroupLayout(pnl_hours);
        pnl_hours.setLayout(pnl_hoursLayout);
        pnl_hoursLayout.setHorizontalGroup(
            pnl_hoursLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lbl_hrs, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sep_hrs2)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_hoursLayout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(btn_hrs_sub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sep_hrs1)
            .add(pnl_hoursLayout.createSequentialGroup()
                .add(btn_hrs_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        pnl_hoursLayout.setVerticalGroup(
            pnl_hoursLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_hoursLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(btn_hrs_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(sep_hrs1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(lbl_hrs)
                .add(0, 0, 0)
                .add(sep_hrs2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_hrs_sub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pnl_minutes.setBackground(new java.awt.Color(51, 51, 55));
        pnl_minutes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnl_minutes.setName("pnl_minutes"); // NOI18N

        btn_min_add.setBackground(new java.awt.Color(51, 51, 51));
        btn_min_add.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_min_add.setForeground(new java.awt.Color(204, 204, 204));
        btn_min_add.setText(" + ");
        btn_min_add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_min_add.setContentAreaFilled(false);
        btn_min_add.setName("btn_min_add"); // NOI18N
        btn_min_add.setOpaque(true);
        btn_min_add.setPreferredSize(new java.awt.Dimension(80, 20));
        btn_min_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_min_add_onClick(evt);
            }
        });

        sep_min1.setBackground(new java.awt.Color(102, 102, 102));
        sep_min1.setForeground(new java.awt.Color(51, 51, 51));
        sep_min1.setName("sep_min1"); // NOI18N

        lbl_min.setFont(new java.awt.Font("Arimo", 0, 64)); // NOI18N
        lbl_min.setForeground(new java.awt.Color(255, 255, 255));
        lbl_min.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_min.setText("12");
        lbl_min.setName("lbl_min"); // NOI18N

        sep_min2.setBackground(new java.awt.Color(102, 102, 102));
        sep_min2.setForeground(new java.awt.Color(51, 51, 51));
        sep_min2.setName("sep_min2"); // NOI18N

        btn_min_sub.setBackground(new java.awt.Color(51, 51, 51));
        btn_min_sub.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_min_sub.setForeground(new java.awt.Color(204, 204, 204));
        btn_min_sub.setText(" - ");
        btn_min_sub.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_min_sub.setContentAreaFilled(false);
        btn_min_sub.setName("btn_min_sub"); // NOI18N
        btn_min_sub.setOpaque(true);
        btn_min_sub.setPreferredSize(new java.awt.Dimension(80, 20));
        btn_min_sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_min_sub_onClick(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnl_minutesLayout = new org.jdesktop.layout.GroupLayout(pnl_minutes);
        pnl_minutes.setLayout(pnl_minutesLayout);
        pnl_minutesLayout.setHorizontalGroup(
            pnl_minutesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lbl_min, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sep_min2)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_minutesLayout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(btn_min_sub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sep_min1)
            .add(pnl_minutesLayout.createSequentialGroup()
                .add(btn_min_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        pnl_minutesLayout.setVerticalGroup(
            pnl_minutesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_minutesLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(btn_min_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(sep_min1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(lbl_min)
                .add(0, 0, 0)
                .add(sep_min2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_min_sub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pnl_seconds.setBackground(new java.awt.Color(51, 51, 55));
        pnl_seconds.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnl_seconds.setName("pnl_seconds"); // NOI18N

        btn_sec_add.setBackground(new java.awt.Color(51, 51, 51));
        btn_sec_add.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_sec_add.setForeground(new java.awt.Color(204, 204, 204));
        btn_sec_add.setText(" + ");
        btn_sec_add.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_sec_add.setContentAreaFilled(false);
        btn_sec_add.setName("btn_sec_add"); // NOI18N
        btn_sec_add.setOpaque(true);
        btn_sec_add.setPreferredSize(new java.awt.Dimension(80, 20));
        btn_sec_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sec_add_onClick(evt);
            }
        });

        sep_sec1.setBackground(new java.awt.Color(102, 102, 102));
        sep_sec1.setForeground(new java.awt.Color(51, 51, 51));
        sep_sec1.setName("sep_sec1"); // NOI18N

        lbl_sec.setFont(new java.awt.Font("Arimo", 0, 64)); // NOI18N
        lbl_sec.setForeground(new java.awt.Color(255, 255, 255));
        lbl_sec.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_sec.setText("99");
        lbl_sec.setName("lbl_sec"); // NOI18N

        sep_sec2.setBackground(new java.awt.Color(102, 102, 102));
        sep_sec2.setForeground(new java.awt.Color(51, 51, 51));
        sep_sec2.setName("sep_sec2"); // NOI18N

        btn_sec_sub.setBackground(new java.awt.Color(51, 51, 51));
        btn_sec_sub.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_sec_sub.setForeground(new java.awt.Color(204, 204, 204));
        btn_sec_sub.setText(" - ");
        btn_sec_sub.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_sec_sub.setContentAreaFilled(false);
        btn_sec_sub.setName("btn_sec_sub"); // NOI18N
        btn_sec_sub.setOpaque(true);
        btn_sec_sub.setPreferredSize(new java.awt.Dimension(80, 20));
        btn_sec_sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sec_sub_onClick(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnl_secondsLayout = new org.jdesktop.layout.GroupLayout(pnl_seconds);
        pnl_seconds.setLayout(pnl_secondsLayout);
        pnl_secondsLayout.setHorizontalGroup(
            pnl_secondsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lbl_sec, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sep_sec2)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_secondsLayout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(btn_sec_sub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, sep_sec1)
            .add(pnl_secondsLayout.createSequentialGroup()
                .add(btn_sec_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, Short.MAX_VALUE))
        );
        pnl_secondsLayout.setVerticalGroup(
            pnl_secondsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, pnl_secondsLayout.createSequentialGroup()
                .add(0, 0, 0)
                .add(btn_sec_add, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(sep_sec1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(lbl_sec)
                .add(0, 0, 0)
                .add(sep_sec2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(btn_sec_sub, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        lbl_active.setFont(new java.awt.Font("Dialog", 1, 21)); // NOI18N
        lbl_active.setForeground(new java.awt.Color(255, 255, 255));
        lbl_active.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_active.setText("Active Task:");
        lbl_active.setName("lbl_active"); // NOI18N

        lbl_task.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lbl_task.setForeground(new java.awt.Color(255, 255, 255));
        lbl_task.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_task.setText("Finish the GUI");
        lbl_task.setName("lbl_task"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lbl_active, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btn_done)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btn_skip)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btn_startpause))
                    .add(layout.createSequentialGroup()
                        .add(btn_todo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btn_utilities))
                    .add(layout.createSequentialGroup()
                        .add(pnl_hours, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(pnl_minutes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, Short.MAX_VALUE)
                        .add(pnl_seconds, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(lbl_task, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btn_todo)
                    .add(btn_utilities))
                .add(34, 34, 34)
                .add(lbl_active)
                .add(30, 30, 30)
                .add(lbl_task)
                .add(127, 127, 127)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnl_hours, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnl_seconds, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnl_minutes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(114, 114, 114)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btn_startpause)
                    .add(btn_done)
                    .add(btn_skip))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    public void nextTask(){
        String temp = TaskManager.next();
        lbl_task.setText(temp);
    }
    
    public void firstTask(){
        String temp = "Chill out!";
        if(!TaskManager.tasks.isEmpty())
            temp = (String)TaskManager.tasks.get(0);
        lbl_task.setText(temp);
    }
    
    public void doneTask(boolean allowNext){
        if(ticker.isRunning())
            ticker.restart();
        
        if(allowNext)
            nextTask();
        else
            firstTask();
        
        spanCurrent = 1;
        breaktime = true;

        notifyUser(1);
        updateTimer();
    }
    
    private void updateTimer(){
        TimeSpan span = Settings.spans[spanCurrent];
        int temp;
        
        temp = span.getHours();
        lbl_hrs.setText( ((temp<10)?"0":"") + String.valueOf(temp) );
        
        temp = span.getMinutes();
        lbl_min.setText( ((temp<10)?"0":"") + String.valueOf(temp) );
        
        temp = span.getSeconds();
        lbl_sec.setText( ((temp<10)?"0":"") + String.valueOf(temp) );
    }
    
    private void updateTimer(int h, int m, int s){
        lbl_hrs.setText( ((h<10)?"0":"") + String.valueOf(h) );
        lbl_min.setText( ((m<10)?"0":"") + String.valueOf(m) );
        lbl_sec.setText( ((s<10)?"0":"") + String.valueOf(s) );
    }
    
    private void tick(){
        int secs = Integer.parseInt(lbl_sec.getText());
        int mins = Integer.parseInt(lbl_min.getText());
        int hrs  = Integer.parseInt(lbl_hrs.getText());
        
        if(secs==0 && mins==1 && hrs==0){
            //notify user that timer is about to end
            notifyUser(0);
        }
        
        if(secs==0){
            if(mins==0){
                if(hrs==0){
                    ticker.restart();
                    endSpan();
                }
                else{
                    hrs--;
                    mins=60;
                    updateTimer(hrs, mins, secs);
                }
            } else {
                mins--;
                secs=60;
                updateTimer(hrs, mins, secs);
            }
        } else {
            secs--;
            updateTimer(hrs, mins, secs);
        }
    }
    
    private void endSpan(){
        if(pomCurrent==Settings.pomCycles && breaktime){
            pomCurrent = 0;
            spanCurrent = 0;
            breaktime = false;
        } else if (!breaktime){
            pomCurrent++;
            if(pomCurrent==Settings.pomCycles)
                spanCurrent = 2;
            else
                spanCurrent = 1;
            breaktime = true;
        } else {
            spanCurrent = 0;
            breaktime = false;
        }
        updateTimer();
    }
    
    private void notifyUser(int i){
        String[] notifications = { "1 Minute More!!!",
                                   "Congratulations for finishing the task!" };
        
        System.out.println( notifications[i] );
    }
    
    
    private void btn_startpause_onCLick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startpause_onCLick
        if(!lbl_task.getText().equals("Chill out!")){
            if(btn_startpause.getText().equals("Start")){
                btn_startpause.setText("Pause");
                ticker.start();
            } else {
                btn_startpause.setText("Start");
                ticker.stop();
            }
        }
    }//GEN-LAST:event_btn_startpause_onCLick

    private void btn_skip_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_skip_onClick
        endSpan();
    }//GEN-LAST:event_btn_skip_onClick

    private void btn_done_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_done_onClick
        doneTask(true);
    }//GEN-LAST:event_btn_done_onClick

    
    private void btn_todo_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_todo_onClick
        Todo todo = new Todo();
        todo.setVisible(true);
        
        this.setEnabled(false);
    }//GEN-LAST:event_btn_todo_onClick

    private void btn_utilities_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_utilities_onClick
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_utilities_onClick

    
    private void btn_min_add_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_min_add_onClick
        int hrs = Integer.parseInt( lbl_hrs.getText() );
        int min = Integer.parseInt( lbl_min.getText() );
        int sec = Integer.parseInt( lbl_sec.getText() );
        
        if(min==59 && hrs<99)
            updateTimer(++hrs, 0, sec);
        else if(min<59)
            updateTimer(hrs, ++min, sec);
    }//GEN-LAST:event_btn_min_add_onClick

    private void btn_min_sub_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_min_sub_onClick
        int hrs = Integer.parseInt( lbl_hrs.getText() );
        int min = Integer.parseInt( lbl_min.getText() );
        int sec = Integer.parseInt( lbl_sec.getText() );
        
        if(min>0)
            updateTimer(hrs, --min, sec);
        else if(min==0 && hrs>0)
            updateTimer(--hrs, 59, sec);
    }//GEN-LAST:event_btn_min_sub_onClick

    private void btn_sec_add_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sec_add_onClick
        int hrs = Integer.parseInt( lbl_hrs.getText() );
        int min = Integer.parseInt( lbl_min.getText() );
        int sec = Integer.parseInt( lbl_sec.getText() );
        
        if(sec==59 && min==59 && hrs<99)
            updateTimer(++hrs, 0, 0);
        else if(sec==59 && min<59)
            updateTimer(hrs, ++min, 0);
        else if(sec<59)
            updateTimer(hrs, min, ++sec);
    }//GEN-LAST:event_btn_sec_add_onClick

    private void btn_sec_sub_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sec_sub_onClick
        int hrs = Integer.parseInt( lbl_hrs.getText() );
        int min = Integer.parseInt( lbl_min.getText() );
        int sec = Integer.parseInt( lbl_sec.getText() );
        
        if(sec>0)
            updateTimer(hrs, min, --sec);
        else if(sec==0 && min>0)
            updateTimer(hrs, --min, 59);
        else if(sec==0 && min==0 && hrs>0)
            updateTimer(--hrs, 59, 59);
    }//GEN-LAST:event_btn_sec_sub_onClick

    private void btn_hrs_add_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hrs_add_onClick
        int hrs = Integer.parseInt( lbl_hrs.getText() );
        int min = Integer.parseInt( lbl_min.getText() );
        int sec = Integer.parseInt( lbl_sec.getText() );

        if(hrs<99)
        updateTimer(++hrs, min, sec);
    }//GEN-LAST:event_btn_hrs_add_onClick

    private void btn_hrs_sub_onClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hrs_sub_onClick
        int hrs = Integer.parseInt( lbl_hrs.getText() );
        int min = Integer.parseInt( lbl_min.getText() );
        int sec = Integer.parseInt( lbl_sec.getText() );

        if(hrs>0)
        updateTimer(--hrs, min, sec);
    }//GEN-LAST:event_btn_hrs_sub_onClick

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pomodoro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        java.awt.EventQueue.invokeLater(() -> {
            pomodoro.setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_done;
    private javax.swing.JButton btn_hrs_add;
    private javax.swing.JButton btn_hrs_sub;
    private javax.swing.JButton btn_min_add;
    private javax.swing.JButton btn_min_sub;
    private javax.swing.JButton btn_sec_add;
    private javax.swing.JButton btn_sec_sub;
    private javax.swing.JButton btn_skip;
    private javax.swing.JButton btn_startpause;
    private javax.swing.JButton btn_todo;
    private javax.swing.JButton btn_utilities;
    private javax.swing.JLabel lbl_active;
    private javax.swing.JLabel lbl_hrs;
    private javax.swing.JLabel lbl_min;
    private javax.swing.JLabel lbl_sec;
    private javax.swing.JLabel lbl_task;
    private javax.swing.JPanel pnl_hours;
    private javax.swing.JPanel pnl_minutes;
    private javax.swing.JPanel pnl_seconds;
    private javax.swing.JSeparator sep_hrs1;
    private javax.swing.JSeparator sep_hrs2;
    private javax.swing.JSeparator sep_min1;
    private javax.swing.JSeparator sep_min2;
    private javax.swing.JSeparator sep_sec1;
    private javax.swing.JSeparator sep_sec2;
    // End of variables declaration//GEN-END:variables
}
